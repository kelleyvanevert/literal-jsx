{"version":3,"sources":["../../parser/lib/index.js","../../parser/lib/lexer.js","assets/logo.svg","../../parser/lib/JSIdentifier.js","../../parser/lib/grammar.js","sections/Motivation.tsx","components/Tabbed.tsx","sections/Specification.tsx","sections/Implementation.tsx","App.tsx","serviceWorker.ts","index.tsx","components/Tabbed.module.scss"],"names":["_toConsumableArray","a","Array","isArray","b","c","length","_arrayWithoutHoles","Symbol","iterator","Object","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","_objectSpread","arguments","d","keys","getOwnPropertySymbols","concat","filter","getOwnPropertyDescriptor","enumerable","forEach","_defineProperty","defineProperty","value","configurable","writable","_typeof","constructor","_possibleConstructorReturn","ReferenceError","_assertThisInitialized","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","nearley","__webpack_require__","lexer","grammar","Parser","_classCallCheck","this","Grammar","fromCompiled","create","_inherits","parseAST","feed","results","Error","defaultFactory","e","_JSXElement","name","attributes","children","module","exports","parseValue","toValue","type","map","reduce","key","expression","apply","moo","common","space","match","lineBreaks","string","states","jsonValue","number","{","push","}","pop","[","]",",",":","true","false","null","plaintext","<","jsxTag","=",".","identifier","/",">","p","_slicedToArray","_arrayWithHoles","f","g","h","next","done","_iterableToArrayLimit","_nonIterableRest","loc","start","end","JSON","parse","raw","text","unshift","reverse","line","col","offset","column","i","_toArray","split","j","k","slice","Lexer","ParserRules","symbols","postprocess","has","literal","join","closingTagName","further","flat","ParserStart","window","Motivation","react_default","createElement","id","href","Tabbed","_ref","tabs","_useState","useState","_useState2","slicedToArray","set_i","className","styles","container","nav","tab","onClick","selected","title","content","rr","Diagram","INTERNAL_ALIGNMENT","JSXL_DIAGRAM_TABS","diagram","ComplexDiagram","NonTerminal","ZeroOrMore","Choice","Sequence","note","Skip","Optional","objectSpread","dangerouslySetInnerHTML","__html","El","attrs","class","JSON_DIAGRAM_TABS","OneOrMore","Comment","Specification","LJSX","CM_OPTS","mode","theme","lineNumbers","smartIndent","tabSize","indentWithTabs","INSPECT_THEME","chromeLight","BASE_BACKGROUND_COLOR","TREENODE_PADDING_LEFT","TREENODE_FONT_SIZE","usePersistedCode","createPersistedState","INITIAL_CODE","Implementation","_usePersistedCode","_usePersistedCode2","code","setCode","parsed","useMemo","ast","error","react_codemirror2","options","readOnly","onBeforeChange","editor","data","inspect","errorMsg","something","_StyledDiv","react_inspector","expandLevel","_StyledDiv2","_StyledP","_StyledPre","wrap","x","Fragment","_StyledImg","alt","src","logo","_StyledH","App_StyledP","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.01b3a810.chunk.js","sourcesContent":["\"use strict\";\n\nfunction _toConsumableArray(a) {\n  return _arrayWithoutHoles(a) || _iterableToArray(a) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(a) {\n  if (Symbol.iterator in Object(a) || \"[object Arguments]\" === Object.prototype.toString.call(a)) return Array.from(a);\n}\n\nfunction _arrayWithoutHoles(a) {\n  if (Array.isArray(a)) {\n    for (var b = 0, c = Array(a.length); b < a.length; b++) {\n      c[b] = a[b];\n    }\n\n    return c;\n  }\n}\n\nfunction _objectSpread(a) {\n  for (var b = 1; b < arguments.length; b++) {\n    var c = null == arguments[b] ? {} : arguments[b],\n        d = Object.keys(c);\n    \"function\" == typeof Object.getOwnPropertySymbols && (d = d.concat(Object.getOwnPropertySymbols(c).filter(function (a) {\n      return Object.getOwnPropertyDescriptor(c, a).enumerable;\n    }))), d.forEach(function (b) {\n      _defineProperty(a, b, c[b]);\n    });\n  }\n\n  return a;\n}\n\nfunction _defineProperty(a, b, c) {\n  return b in a ? Object.defineProperty(a, b, {\n    value: c,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : a[b] = c, a;\n}\n\nfunction _typeof(a) {\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (a) {\n    return typeof a;\n  } : function (a) {\n    return a && \"function\" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? \"symbol\" : typeof a;\n  }, _typeof(a);\n}\n\nfunction _classCallCheck(a, b) {\n  if (!(a instanceof b)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\nfunction _possibleConstructorReturn(a, b) {\n  return b && (\"object\" === _typeof(b) || \"function\" == typeof b) ? b : _assertThisInitialized(a);\n}\n\nfunction _assertThisInitialized(a) {\n  if (void 0 === a) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return a;\n}\n\nfunction _getPrototypeOf(a) {\n  return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function (a) {\n    return a.__proto__ || Object.getPrototypeOf(a);\n  }, _getPrototypeOf(a);\n}\n\nfunction _inherits(a, b) {\n  if (\"function\" != typeof b && null !== b) throw new TypeError(\"Super expression must either be null or a function\");\n  a.prototype = Object.create(b && b.prototype, {\n    constructor: {\n      value: a,\n      writable: !0,\n      configurable: !0\n    }\n  }), b && _setPrototypeOf(a, b);\n}\n\nfunction _setPrototypeOf(a, b) {\n  return _setPrototypeOf = Object.setPrototypeOf || function (a, b) {\n    return a.__proto__ = b, a;\n  }, _setPrototypeOf(a, b);\n}\n\nvar nearley = require(\"nearley\"),\n    lexer = require(\"./lexer\"),\n    grammar = require(\"./grammar\"),\n    Parser =\n/*#__PURE__*/\nfunction (a) {\n  function b() {\n    return _classCallCheck(this, b), _possibleConstructorReturn(this, _getPrototypeOf(b).call(this, nearley.Grammar.fromCompiled(grammar)));\n  }\n\n  return _inherits(b, a), b;\n}(nearley.Parser);\n\nfunction parseAST(a) {\n  var b = new Parser();\n  if (b.feed(a), b.results[0]) return b.results[0];\n  throw new Error(\"could not parse\");\n}\n\nfunction parseValue(a) {\n  var b = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : defaultFactory,\n      c = parseAST(a);\n  return toValue(c, b);\n}\n\nmodule.exports = {\n  lexer: lexer,\n  grammar: grammar,\n  Parser: Parser,\n  parseAST: parseAST,\n  parseValue: parseValue\n};\n\nfunction defaultFactory(a, b) {\n  for (var c = arguments.length, d = Array(2 < c ? c - 2 : 0), e = 2; e < c; e++) {\n    d[e - 2] = arguments[e];\n  }\n\n  return {\n    _JSXElement: !0,\n    name: a,\n    attributes: b,\n    children: d\n  };\n}\n\nfunction toValue(a, b) {\n  switch (a.type) {\n    case \"Literal\":\n      return a.value;\n\n    case \"Array\":\n      return a.children.map(function (a) {\n        return toValue(a, b);\n      });\n\n    case \"Object\":\n      return a.children.reduce(function (a, c) {\n        var d = c.key,\n            e = c.value;\n        return _objectSpread({}, a, _defineProperty({}, d.value, toValue(e, b)));\n      }, {});\n\n    case \"Name\":\n      return a.name;\n\n    case \"Expression\":\n      return toValue(a.expression, b);\n\n    case \"Element\":\n      return b.apply(void 0, [toValue(a.name, b), a.attributes.reduce(function (a, c) {\n        var d = c.name,\n            e = c.value;\n        return _objectSpread({}, a, _defineProperty({}, d.name, !(\"undefined\" != typeof e) || toValue(e, b)));\n      }, {})].concat(_toConsumableArray(a.children.map(function (a) {\n        return toValue(a, b);\n      }))));\n\n    default:\n      return a;\n  }\n}","\"use strict\";\n\nfunction _objectSpread(a) {\n  for (var b = 1; b < arguments.length; b++) {\n    var c = null == arguments[b] ? {} : arguments[b],\n        d = Object.keys(c);\n    \"function\" == typeof Object.getOwnPropertySymbols && (d = d.concat(Object.getOwnPropertySymbols(c).filter(function (a) {\n      return Object.getOwnPropertyDescriptor(c, a).enumerable;\n    }))), d.forEach(function (b) {\n      _defineProperty(a, b, c[b]);\n    });\n  }\n\n  return a;\n}\n\nfunction _defineProperty(a, b, c) {\n  return b in a ? Object.defineProperty(a, b, {\n    value: c,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : a[b] = c, a;\n}\n\nvar moo = require(\"moo\"),\n    common = {\n  space: {\n    match: /\\s+/,\n    lineBreaks: !0\n  },\n  string: /\"(?:\\\\[\"bfnrt\\/\\\\]|\\\\u[a-fA-F0-9]{4}|[^\"\\\\])*\"/\n};\n\nmodule.exports = moo.states({\n  jsonValue: _objectSpread({}, common, {\n    number: /-?(?:[0-9]|[1-9][0-9]+)(?:\\.[0-9]+)?(?:[eE][-+]?[0-9]+)?\\b/,\n    \"{\": {\n      match: \"{\",\n      push: \"jsonValue\"\n    },\n    \"}\": {\n      match: \"}\",\n      pop: 1\n    },\n    \"[\": \"[\",\n    \"]\": \"]\",\n    \",\": \",\",\n    \":\": \":\",\n    true: \"true\",\n    false: \"false\",\n    null: \"null\",\n    plaintext: {\n      match: /(?:(?!(?:\\{|\\}|<))[^])+/,\n      lineBreaks: !0\n    },\n    \"<\": {\n      match: \"<\",\n      push: \"jsxTag\"\n    }\n  }),\n  jsxTag: _objectSpread({}, common, {\n    \"=\": \"=\",\n    \".\": \".\",\n    \":\": \":\",\n    identifier: require(\"./JSIdentifier\"),\n    \"/\": \"/\",\n    \">\": {\n      match: \">\",\n      pop: 1\n    },\n    \"{\": {\n      match: \"{\",\n      push: \"jsonValue\"\n    }\n  })\n});","module.exports = __webpack_public_path__ + \"static/media/logo.7d2e3c0f.svg\";","\"use strict\"; // See [https://mathiasbynens.be/notes/javascript-identifiers-es6]\n\nmodule.exports = /(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|null|this|true|void|with|await|break|catch|class|const|false|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)(?:[$A-Z_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D])(?:[$0-9A-Z_a-z\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF])*/;","\"use strict\";\n\nfunction _objectSpread(a) {\n  for (var b = 1; b < arguments.length; b++) {\n    var c = null == arguments[b] ? {} : arguments[b],\n        d = Object.keys(c);\n    \"function\" == typeof Object.getOwnPropertySymbols && (d = d.concat(Object.getOwnPropertySymbols(c).filter(function (a) {\n      return Object.getOwnPropertyDescriptor(c, a).enumerable;\n    }))), d.forEach(function (b) {\n      _defineProperty(a, b, c[b]);\n    });\n  }\n\n  return a;\n}\n\nfunction _defineProperty(a, b, c) {\n  return b in a ? Object.defineProperty(a, b, {\n    value: c,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : a[b] = c, a;\n}\n\nfunction _toArray(a) {\n  return _arrayWithHoles(a) || _iterableToArray(a) || _nonIterableRest();\n}\n\nfunction _toConsumableArray(a) {\n  return _arrayWithoutHoles(a) || _iterableToArray(a) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(a) {\n  if (Symbol.iterator in Object(a) || \"[object Arguments]\" === Object.prototype.toString.call(a)) return Array.from(a);\n}\n\nfunction _arrayWithoutHoles(a) {\n  if (Array.isArray(a)) {\n    for (var b = 0, c = Array(a.length); b < a.length; b++) {\n      c[b] = a[b];\n    }\n\n    return c;\n  }\n}\n\nfunction _slicedToArray(a, b) {\n  return _arrayWithHoles(a) || _iterableToArrayLimit(a, b) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(a, b) {\n  var c = [],\n      d = !0,\n      e = !1,\n      f = void 0;\n\n  try {\n    for (var g, h = a[Symbol.iterator](); !(d = (g = h.next()).done) && (c.push(g.value), !(b && c.length === b)); d = !0) {\n      ;\n    }\n  } catch (a) {\n    e = !0, f = a;\n  } finally {\n    try {\n      d || null == h[\"return\"] || h[\"return\"]();\n    } finally {\n      if (e) throw f;\n    }\n  }\n\n  return c;\n}\n\nfunction _arrayWithHoles(a) {\n  if (Array.isArray(a)) return a;\n} // Generated automatically by nearley, version 2.16.0\n// http://github.com/Hardmath123/nearley\n\n\n(function () {\n  function a(a) {\n    return a[0];\n  }\n\n  function b(a) {\n    return function (b) {\n      var c = _slicedToArray(b, 3),\n          d = c[0],\n          e = c[2];\n\n      return {\n        type: a,\n        children: [],\n        loc: {\n          start: g(d),\n          end: g(e, !0)\n        }\n      };\n    };\n  }\n\n  function c(a) {\n    return function (b) {\n      var c = _slicedToArray(b, 6),\n          d = c[0],\n          e = c[2],\n          f = c[3],\n          h = c[5];\n\n      return {\n        type: a,\n        children: [e].concat(_toConsumableArray(f.map(function (a) {\n          var b = _slicedToArray(a, 4),\n              c = b[3];\n\n          return c;\n        }))),\n        loc: {\n          start: g(d),\n          end: g(h, !0)\n        }\n      };\n    };\n  }\n\n  function d() {\n    var a = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : \"Literal\";\n    return function (b) {\n      var c = _slicedToArray(b, 1),\n          d = c[0];\n\n      return {\n        type: a,\n        value: JSON.parse(d.value),\n        raw: d.text,\n        loc: {\n          start: g(d),\n          end: g(d, !0)\n        }\n      };\n    };\n  }\n\n  function e(a) {\n    var b = _slicedToArray(a, 1),\n        c = b[0];\n\n    return {\n      type: \"Literal\",\n      value: c.text,\n      raw: c.text,\n      loc: {\n        start: g(c),\n        end: g(c, !0)\n      }\n    };\n  }\n\n  function f() {\n    for (var a = [], b = arguments.length, c = Array(b), d = 0; d < b; d++) {\n      c[d] = arguments[d];\n    }\n\n    return c.forEach(function (b) {\n      \"space\" === b.type ? a[0] && \"Literal\" === a[0].type ? (a[0].value += b.value, a[0].raw += b.raw, a[0].loc.end = g(b, !0)) : a.unshift(e([b])) : a[0] && \"Literal\" === a[0].type && \"Literal\" === b.type ? (a[0].value += b.value, a[0].raw += b.raw, a[0].loc.end = b.loc.end) : b.type && a.unshift(b);\n    }), a.reverse();\n  }\n\n  function g(a) {\n    var b = a.line,\n        c = a.col,\n        d = a.offset,\n        e = a.text,\n        f = !!(1 < arguments.length && arguments[1] !== void 0) && arguments[1],\n        g = {\n      line: b,\n      column: c,\n      offset: d\n    };\n\n    if (f) {\n      g.offset += e.length;\n\n      var h = e.split(/\\r?\\n/),\n          i = _toArray(h),\n          j = i[0],\n          k = i.slice(1);\n\n      g.line += k.length, 0 < k.length ? g.column = k[k.length - 1].length + 1 : g.column += j.length;\n    }\n\n    return g;\n  }\n\n  var h = require(\"deepmerge\"),\n      i = require(\"./lexer\"),\n      j = {\n    Lexer: i,\n    ParserRules: [{\n      name: \"json\",\n      symbols: [\"_\", \"value\", \"_\"],\n      postprocess: function postprocess(a) {\n        var b = _slicedToArray(a, 2),\n            c = b[1];\n\n        return c;\n      }\n    }, {\n      name: \"nsName\",\n      symbols: [i.has(\"identifier\") ? {\n        type: \"identifier\"\n      } : identifier, \"_\", {\n        literal: \":\"\n      }, \"_\", i.has(\"identifier\") ? {\n        type: \"identifier\"\n      } : identifier],\n      postprocess: function postprocess(a) {\n        var b = _slicedToArray(a, 5),\n            c = b[0],\n            d = b[4];\n\n        return {\n          type: \"Name\",\n          loc: {\n            start: g(c),\n            end: g(d, !0)\n          },\n          name: c.value + \":\" + d.value\n        };\n      }\n    }, {\n      name: \"memberName$ebnf$1$subexpression$1\",\n      symbols: [\"_\", {\n        literal: \".\"\n      }, \"_\", i.has(\"identifier\") ? {\n        type: \"identifier\"\n      } : identifier]\n    }, {\n      name: \"memberName$ebnf$1\",\n      symbols: [\"memberName$ebnf$1$subexpression$1\"]\n    }, {\n      name: \"memberName$ebnf$1$subexpression$2\",\n      symbols: [\"_\", {\n        literal: \".\"\n      }, \"_\", i.has(\"identifier\") ? {\n        type: \"identifier\"\n      } : identifier]\n    }, {\n      name: \"memberName$ebnf$1\",\n      symbols: [\"memberName$ebnf$1\", \"memberName$ebnf$1$subexpression$2\"],\n      postprocess: function postprocess(a) {\n        return a[0].concat([a[1]]);\n      }\n    }, {\n      name: \"memberName\",\n      symbols: [i.has(\"identifier\") ? {\n        type: \"identifier\"\n      } : identifier, \"memberName$ebnf$1\"],\n      postprocess: function postprocess(a) {\n        var b = _slicedToArray(a, 2),\n            c = b[0],\n            d = b[1],\n            e = d[d.length - 1][3];\n\n        return {\n          type: \"Name\",\n          loc: {\n            start: g(c),\n            end: g(e, !0)\n          },\n          name: c.value + d.map(function (a) {\n            var b = _slicedToArray(a, 4),\n                c = b[3];\n\n            return \".\" + c.value;\n          }).join(\"\")\n        };\n      }\n    }, {\n      name: \"idName\",\n      symbols: [i.has(\"identifier\") ? {\n        type: \"identifier\"\n      } : identifier],\n      postprocess: function postprocess(a) {\n        var b = _slicedToArray(a, 1),\n            c = b[0];\n\n        return {\n          type: \"Name\",\n          loc: {\n            start: g(c),\n            end: g(c, !0)\n          },\n          name: c.value\n        };\n      }\n    }, {\n      name: \"elementName\",\n      symbols: [\"nsName\"],\n      postprocess: a\n    }, {\n      name: \"elementName\",\n      symbols: [\"memberName\"],\n      postprocess: a\n    }, {\n      name: \"elementName\",\n      symbols: [\"idName\"],\n      postprocess: a\n    }, {\n      name: \"closingTag\",\n      symbols: [{\n        literal: \"<\"\n      }, \"_\", {\n        literal: \"/\"\n      }, \"_\", \"elementName\", \"_\", {\n        literal: \">\"\n      }],\n      postprocess: function postprocess(a) {\n        var b = _slicedToArray(a, 7),\n            c = b[0],\n            d = b[4],\n            e = b[6],\n            f = g(c),\n            h = g(e, !0);\n\n        return {\n          closingTagName: d.name,\n          loc: {\n            start: f,\n            end: h\n          }\n        };\n      }\n    }, {\n      name: \"furtherElement\",\n      symbols: [{\n        literal: \"/\"\n      }, \"_\", {\n        literal: \">\"\n      }],\n      postprocess: function postprocess(a) {\n        var b = _slicedToArray(a, 3),\n            c = b[2];\n\n        return {\n          further: {\n            loc: {\n              end: g(c, !0)\n            },\n            children: []\n          }\n        };\n      }\n    }, {\n      name: \"furtherElement$ebnf$1\",\n      symbols: []\n    }, {\n      name: \"furtherElement$ebnf$1$subexpression$1\",\n      symbols: [\"_\", \"child\"]\n    }, {\n      name: \"furtherElement$ebnf$1\",\n      symbols: [\"furtherElement$ebnf$1\", \"furtherElement$ebnf$1$subexpression$1\"],\n      postprocess: function postprocess(a) {\n        return a[0].concat([a[1]]);\n      }\n    }, {\n      name: \"furtherElement\",\n      symbols: [{\n        literal: \">\"\n      }, \"furtherElement$ebnf$1\", \"_\", \"closingTag\"],\n      postprocess: function postprocess(a) {\n        var b = _slicedToArray(a, 4),\n            c = b[1],\n            d = b[2],\n            e = b[3],\n            g = e.closingTagName,\n            h = e.loc;\n\n        return {\n          closingTagName: g,\n          further: {\n            loc: {\n              end: h.end\n            },\n            children: f.apply(void 0, _toConsumableArray(c.flat()).concat([d]))\n          }\n        };\n      }\n    }, {\n      name: \"child\",\n      symbols: [i.has(\"plaintext\") ? {\n        type: \"plaintext\"\n      } : plaintext],\n      postprocess: e\n    }, {\n      name: \"child\",\n      symbols: [\"element\"],\n      postprocess: a\n    }, {\n      name: \"child\",\n      symbols: [\"expression\"],\n      postprocess: a\n    }, {\n      name: \"element$ebnf$1\",\n      symbols: []\n    }, {\n      name: \"element$ebnf$1$subexpression$1\",\n      symbols: [\"_\", \"attr\"]\n    }, {\n      name: \"element$ebnf$1\",\n      symbols: [\"element$ebnf$1\", \"element$ebnf$1$subexpression$1\"],\n      postprocess: function postprocess(a) {\n        return a[0].concat([a[1]]);\n      }\n    }, {\n      name: \"element\",\n      symbols: [{\n        literal: \"<\"\n      }, \"_\", \"elementName\", \"element$ebnf$1\", \"_\", \"furtherElement\"],\n      postprocess: function postprocess(a) {\n        var b = _slicedToArray(a, 6),\n            c = b[0],\n            d = b[2],\n            e = b[3],\n            f = b[5],\n            i = f.closingTagName,\n            j = f.further;\n\n        if (i && d.name !== i) throw new Error(\"closing tag must match opening tag name!\");\n        return h({\n          type: \"Element\",\n          loc: {\n            start: g(c)\n          },\n          name: d,\n          attributes: e.map(function (a) {\n            var b = _slicedToArray(a, 2),\n                c = b[1];\n\n            return c;\n          })\n        }, j);\n      }\n    }, {\n      name: \"attrname\",\n      symbols: [\"nsName\"],\n      postprocess: a\n    }, {\n      name: \"attrname\",\n      symbols: [\"idName\"],\n      postprocess: a\n    }, {\n      name: \"attr$ebnf$1$subexpression$1\",\n      symbols: [\"_\", {\n        literal: \"=\"\n      }, \"_\", \"attrval\"]\n    }, {\n      name: \"attr$ebnf$1\",\n      symbols: [\"attr$ebnf$1$subexpression$1\"],\n      postprocess: a\n    }, {\n      name: \"attr$ebnf$1\",\n      symbols: [],\n      postprocess: function postprocess() {\n        return null;\n      }\n    }, {\n      name: \"attr\",\n      symbols: [\"attrname\", \"attr$ebnf$1\"],\n      postprocess: function postprocess(a) {\n        var b = _slicedToArray(a, 2),\n            c = b[0],\n            d = b[1];\n\n        return _objectSpread({\n          type: \"Attribute\",\n          loc: {\n            start: c.loc.start,\n            end: d ? d[3].loc.end : c.loc.end\n          },\n          name: c\n        }, d ? {\n          value: d[3]\n        } : {});\n      }\n    }, {\n      name: \"expression\",\n      symbols: [{\n        literal: \"{\"\n      }, \"_\", \"value\", \"_\", {\n        literal: \"}\"\n      }],\n      postprocess: function postprocess(a) {\n        var b = _slicedToArray(a, 5),\n            c = b[0],\n            d = b[2],\n            e = b[4];\n\n        return {\n          type: \"Expression\",\n          loc: {\n            start: g(c),\n            end: g(e, !0)\n          },\n          expression: d\n        };\n      }\n    }, {\n      name: \"attrval\",\n      symbols: [i.has(\"string\") ? {\n        type: \"string\"\n      } : string],\n      postprocess: d()\n    }, {\n      name: \"attrval\",\n      symbols: [\"expression\"],\n      postprocess: a\n    }, {\n      name: \"object\",\n      symbols: [{\n        literal: \"{\"\n      }, \"_\", {\n        literal: \"}\"\n      }],\n      postprocess: b(\"Object\")\n    }, {\n      name: \"object$ebnf$1\",\n      symbols: []\n    }, {\n      name: \"object$ebnf$1$subexpression$1\",\n      symbols: [\"_\", {\n        literal: \",\"\n      }, \"_\", \"property\"]\n    }, {\n      name: \"object$ebnf$1\",\n      symbols: [\"object$ebnf$1\", \"object$ebnf$1$subexpression$1\"],\n      postprocess: function postprocess(a) {\n        return a[0].concat([a[1]]);\n      }\n    }, {\n      name: \"object\",\n      symbols: [{\n        literal: \"{\"\n      }, \"_\", \"property\", \"object$ebnf$1\", \"_\", {\n        literal: \"}\"\n      }],\n      postprocess: c(\"Object\")\n    }, {\n      name: \"array\",\n      symbols: [{\n        literal: \"[\"\n      }, \"_\", {\n        literal: \"]\"\n      }],\n      postprocess: b(\"Array\")\n    }, {\n      name: \"array$ebnf$1\",\n      symbols: []\n    }, {\n      name: \"array$ebnf$1$subexpression$1\",\n      symbols: [\"_\", {\n        literal: \",\"\n      }, \"_\", \"value\"]\n    }, {\n      name: \"array$ebnf$1\",\n      symbols: [\"array$ebnf$1\", \"array$ebnf$1$subexpression$1\"],\n      postprocess: function postprocess(a) {\n        return a[0].concat([a[1]]);\n      }\n    }, {\n      name: \"array\",\n      symbols: [{\n        literal: \"[\"\n      }, \"_\", \"value\", \"array$ebnf$1\", \"_\", {\n        literal: \"]\"\n      }],\n      postprocess: c(\"Array\")\n    }, {\n      name: \"value\",\n      symbols: [\"object\"],\n      postprocess: a\n    }, {\n      name: \"value\",\n      symbols: [\"array\"],\n      postprocess: a\n    }, {\n      name: \"value\",\n      symbols: [{\n        literal: \"true\"\n      }],\n      postprocess: d()\n    }, {\n      name: \"value\",\n      symbols: [{\n        literal: \"false\"\n      }],\n      postprocess: d()\n    }, {\n      name: \"value\",\n      symbols: [{\n        literal: \"null\"\n      }],\n      postprocess: d()\n    }, {\n      name: \"value\",\n      symbols: [i.has(\"number\") ? {\n        type: \"number\"\n      } : number],\n      postprocess: d()\n    }, {\n      name: \"value\",\n      symbols: [i.has(\"string\") ? {\n        type: \"string\"\n      } : string],\n      postprocess: d()\n    }, {\n      name: \"value\",\n      symbols: [\"element\"],\n      postprocess: a\n    }, {\n      name: \"property\",\n      symbols: [\"key\", \"_\", {\n        literal: \":\"\n      }, \"_\", \"value\"],\n      postprocess: function postprocess(a) {\n        var b = _slicedToArray(a, 5),\n            c = b[0],\n            d = b[4];\n\n        return {\n          type: \"Property\",\n          key: c,\n          value: d,\n          loc: {\n            start: c.loc.start,\n            end: d.loc.end\n          }\n        };\n      }\n    }, {\n      name: \"key\",\n      symbols: [i.has(\"string\") ? {\n        type: \"string\"\n      } : string],\n      postprocess: d(\"Identifier\")\n    }, {\n      name: \"_\",\n      symbols: []\n    }, {\n      name: \"_\",\n      symbols: [i.has(\"space\") ? {\n        type: \"space\"\n      } : space],\n      postprocess: a\n    }],\n    ParserStart: \"json\"\n  };\n\n  \"undefined\" != typeof module && \"undefined\" != typeof module.exports ? module.exports = j : window.grammar = j;\n})();","import React from \"react\";\n\nexport default function Motivation() {\n  return (\n    <section id=\"motivation\">\n      <h2>\n        <a href=\"#motivation\">Motivation</a>\n      </h2>\n      <p>\n        Literal JSX aims to serve a similar purpose as JSON did: by subsetting\n        the syntax of JSX to its well-founded, unambiguously structured, easily\n        parseable, and non-Turing-complete core, a{\" \"}\n        <em>technically flexible and visually intuitive content format</em> is\n        obtained. On the one hand, Literal JSX is easily parseable (due to its\n        single-pass unambiguous grammar), making it a good candidate for\n        at-runtime compilation. On the other, it is an easily authored and\n        well-known syntax, mainly due to the immense popularity of React, the\n        web UI library that invented and popularized JSX.\n      </p>\n      <p>\n        Especially in the intersection of the two rising trends in web\n        development that are: (1) lightweight markup format content authoring\n        (that is, using Markdown or some other simple markup format to serve the\n        content of your site, documentation, or something else); and (2)\n        component-based UI design, which is emerging as a best-practice\n        engineering technique for complex interfaces; there is a strong need for\n        a simple standard for describing nominal and data-rich content\n        structures, as opposed to the various case-specific \"grammar-hacks\" that\n        are now commonly used for this purpose. Literal JSX aims to satisfy that\n        need.\n      </p>\n      <p>\n        The idea of interspersing JSX in markdown is not new, and libraries such\n        as <a href=\"https://mdxjs.com/\">MDX</a> are currently popularizing this\n        idea. However MDX is a <em>library</em> dependent on a full-blown\n        JavaScript parser, thereby making it technically non-trivial and dubious\n        to compile content at runtime (e.g. in the browser). By instead just\n        outlining a narrow and unambiguous subset grammar of JSX, Literal JSX\n        defines a <em>standard</em> that is language- and framework-agnostic.\n      </p>\n      <p>\n        To summarize: Literal JSX aims to privide a{\" \"}\n        <em>straightforward and intuitive standard</em> for content-authoring in\n        the component-based design era.\n      </p>\n    </section>\n  );\n}\n","import \"styled-components/macro\";\nimport React, { useState } from \"react\";\nimport styles from \"./Tabbed.module.scss\";\n\nexport interface ITab {\n  title: string;\n  content: React.ReactNode;\n}\n\ninterface Props {\n  tabs: ITab[];\n}\n\nexport default function Tabbed({ tabs }: Props) {\n  const [i, set_i] = useState<number>(0);\n\n  return (\n    <div className={styles.container}>\n      <ul className={styles.nav}>\n        {tabs.map((tab, j) => (\n          <li key={j}>\n            <button\n              onClick={() => set_i(j)}\n              className={i === j ? styles.selected : \"\"}\n            >\n              {tab.title}\n            </button>\n          </li>\n        ))}\n      </ul>\n      <div className={styles.content}>{tabs[i] ? tabs[i].content : null}</div>\n    </div>\n  );\n}\n","import \"styled-components/macro\";\nimport React from \"react\";\nimport rr from \"railroad-diagrams/railroad\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\nimport Tabbed, { ITab } from \"~/components/Tabbed\";\n\n// @ts-ignore\nrr.Diagram.INTERNAL_ALIGNMENT = \"left\";\n\nconst JSXL_DIAGRAM_TABS: Array<ITab & { diagram: any }> = [\n  {\n    title: \"Element\",\n    diagram: rr.ComplexDiagram(\n      \"<\",\n      rr.NonTerminal(\"Name\"),\n      rr.ZeroOrMore(rr.NonTerminal(\"Attribute\")),\n      rr.Choice(\n        1,\n        rr.Sequence(\"/\", \">\"),\n        rr.Sequence(\n          \">\",\n          rr.ZeroOrMore(rr.NonTerminal(\"Child\")),\n          \"<\",\n          \"/\",\n          rr.NonTerminal(\"Name*\"),\n          \">\"\n        )\n      )\n    ),\n    note: <p>*must match the one on in the opening tag</p>\n  },\n  // {\n  //   title: \"Fragment\",\n  //   diagram: rr.ComplexDiagram(\n  //     \"<\",\n  //     \">\",\n  //     rr.ZeroOrMore(rr.NonTerminal(\"Child\")),\n  //     \"<\",\n  //     \"/\",\n  //     \">\"\n  //   )\n  // },\n  {\n    title: \"Name\",\n    diagram: rr.ComplexDiagram(\n      rr.NonTerminal(\"Identifier\"),\n      rr.Choice(\n        0,\n        rr.ZeroOrMore(rr.Sequence(\".\", rr.NonTerminal(\"Identifier\"))),\n        rr.Sequence(\":\", rr.NonTerminal(\"Identifier\"))\n      )\n    ),\n    note: (\n      <p>\n        <em>Identifier</em> is any valid variable name in JavaScript\n      </p>\n    )\n  },\n  {\n    title: \"Attribute\",\n    diagram: rr.ComplexDiagram(\n      rr.NonTerminal(\"Identifier\"),\n      rr.Choice(0, rr.Skip(), rr.Sequence(\":\", rr.NonTerminal(\"Identifier\"))),\n      rr.Optional(\n        rr.Sequence(\n          \"=\",\n          rr.Choice(\n            0,\n            rr.NonTerminal(\"String\"),\n            rr.Sequence(\"{\", rr.NonTerminal(\"Value\"), \"}\")\n          )\n        )\n      )\n    )\n  },\n  {\n    title: \"Child\",\n    diagram: rr.ComplexDiagram(\n      rr.Choice(\n        0,\n        rr.NonTerminal(\"plain text\"),\n        rr.NonTerminal(\"Element\"),\n        rr.Sequence(\"{\", rr.NonTerminal(\"Value\"), \"}\")\n      )\n    )\n  }\n].map(tab => ({\n  ...tab,\n  content: (\n    <div className=\"new\">\n      <div dangerouslySetInnerHTML={{ __html: tab.diagram }} />\n      {tab.note || null}\n    </div>\n  )\n}));\n\nconst El = rr.NonTerminal(\"Element\");\nEl.attrs.class += \" new\";\n\nconst JSON_DIAGRAM_TABS: ITab[] = [\n  {\n    title: \"Value\",\n    diagram: rr.ComplexDiagram(\n      rr.Choice(\n        0,\n        El,\n        rr.NonTerminal(\"String\"),\n        rr.NonTerminal(\"Number\"),\n        rr.NonTerminal(\"Object\"),\n        rr.NonTerminal(\"Array\"),\n        \"true\",\n        \"false\",\n        \"null\"\n      )\n    )\n  },\n  {\n    title: \"Object\",\n    diagram: rr.ComplexDiagram(\n      \"{\",\n      rr.ZeroOrMore(\n        rr.Sequence(rr.NonTerminal(\"String\"), \":\", rr.NonTerminal(\"Value\")),\n        \",\"\n      ),\n      \"}\"\n    )\n  },\n  {\n    title: \"Array\",\n    diagram: rr.ComplexDiagram(\n      \"[\",\n      rr.ZeroOrMore(rr.NonTerminal(\"Value\"), \",\"),\n      \"]\"\n    )\n  },\n  {\n    title: \"String\",\n    diagram: rr.Diagram(\n      '\"',\n      rr.Optional(\n        rr.OneOrMore(\n          rr.Choice(\n            0,\n            rr.NonTerminal(\"almost any UNICODE character\"),\n            rr.Sequence(\n              \"\\\\\",\n              rr.Choice(\n                0,\n                rr.Sequence('\"', rr.Comment(\"quotation mark\")),\n                rr.Sequence(\"\\\\\", rr.Comment(\"reverse solidus\")),\n                rr.Sequence(\"/\", rr.Comment(\"solidus\")),\n                rr.Sequence(\"b\", rr.Comment(\"backspace\")),\n                rr.Sequence(\"f\", rr.Comment(\"formfeed\")),\n                rr.Sequence(\"n\", rr.Comment(\"newline\")),\n                rr.Sequence(\"r\", rr.Comment(\"carriage return\")),\n                rr.Sequence(\"t\", rr.Comment(\"horizontal tab\")),\n                rr.Sequence(\"u\", rr.NonTerminal(\"4 hexademical digits\"))\n              )\n            )\n          )\n        )\n      ),\n      '\"'\n    )\n  },\n  {\n    title: \"Number\",\n    diagram: rr.Diagram(\n      rr.Sequence(\n        rr.Choice(0, rr.Skip(), \"-\"),\n        rr.Choice(\n          0,\n          \"0\",\n          rr.Sequence(\n            rr.NonTerminal(\"digit 1-9\"),\n            rr.OneOrMore(rr.Skip(), rr.NonTerminal(\"digit\"))\n          )\n        ),\n        rr.Optional(rr.Sequence(\".\", rr.OneOrMore(rr.NonTerminal(\"digit\")))),\n        rr.Choice(\n          0,\n          rr.Skip(),\n          rr.Sequence(\n            rr.Choice(0, \"e\", \"E\"),\n            rr.Choice(1, \"-\", rr.Skip(), \"+\"),\n            rr.OneOrMore(rr.NonTerminal(\"digit\"))\n          )\n        )\n      )\n    )\n  }\n].map(tab => ({\n  ...tab,\n  content: <div dangerouslySetInnerHTML={{ __html: tab.diagram }} />\n}));\n\nexport default function Specification() {\n  return (\n    <section id=\"specification\">\n      <h2>\n        <a href=\"#specification\">Specification</a>\n      </h2>\n      <p>\n        Literal JSX subsets JSX in the same spirit as JSON subsets JavaScript.\n        This means some \"sugary\" JSX syntax has been intentionally omitted. For\n        example, JSX elements cannot be assigned unquoted to attributes of other\n        elements, and strings are always double-quoted, just like in JSON. Some\n        other things to note are:\n      </p>\n      <ul>\n        <li>\n          The \"root\" for the grammer is that <em className=\"nt\">Value</em>{\" \"}\n          non-terminal. That is to say, Literal JSX \"is just JSON\", but then\n          with some JSX goodness.\n        </li>\n        <li>\n          There is no \"fragment\" type (usually written as <code>&lt;&gt;</code>{\" \"}\n          ... <code>&lt;/&gt;</code>). The way that fragments are used in React\n          essentially boils down to an array, which <em>is</em> expressible in\n          Literal JSX. For example:{\" \"}\n          <code>[&lt;a /&gt;, &lt;b /&gt;, &lt;c /&gt;]</code>\n        </li>\n        <li>\n          White-space can be freely inserted between pretty much every token,\n          and does not affect semantics. However, the{\" \"}\n          <em className=\"nt\">plain text</em> non-terminal forms an exception: it\n          greedily eats and preserves white-space left and right.\n        </li>\n      </ul>\n      <Tabbed tabs={JSXL_DIAGRAM_TABS} />\n      <Tabbed tabs={JSON_DIAGRAM_TABS} />\n    </section>\n  );\n}\n","import \"styled-components/macro\";\nimport React, { useMemo } from \"react\";\nimport createPersistedState from \"use-persisted-state\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\nimport \"codemirror/mode/jsx/jsx\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"~/assets/codemirror-theme.scss\";\n// @ts-ignore\nimport { ObjectInspector, chromeLight } from \"react-inspector\";\n// @ts-ignore\nimport LJSX from \"@literal-jsx/parser\";\nimport Tabbed from \"~/components/Tabbed\";\n\n// @ts-ignore\nwindow.LJSX = LJSX;\n\nconst CM_OPTS = {\n  mode: \"text/jsx\",\n  theme: \"ljsx\",\n  lineNumbers: false,\n  smartIndent: true,\n  tabSize: 2,\n  indentWithTabs: false\n};\n\nconst INSPECT_THEME = {\n  ...chromeLight,\n  ...{\n    BASE_BACKGROUND_COLOR: \"transparent\",\n    TREENODE_PADDING_LEFT: 20,\n    TREENODE_FONT_SIZE: \"12px\"\n  }\n};\n\nconst usePersistedCode = createPersistedState(\"code\");\n\nconst INITIAL_CODE = `<Button.NavLike\n  name=\"Hello\"\n  something={{ \"a\": 24 }}\n  ok\n>\n \tPlain text is always a <bit:boring />\n  {[25, {}, \"hello\", <a.b.c> hi! </ a.b.c>]}\n</Button.NavLike>`;\n\nexport default function Implementation() {\n  const [code, setCode] = usePersistedCode<string>(INITIAL_CODE);\n  const parsed = useMemo(() => {\n    try {\n      return { value: LJSX.parseValue(code), ast: LJSX.parseAST(code) };\n    } catch (error) {\n      return { error };\n    }\n  }, [code]);\n\n  return (\n    <section id=\"implementation\">\n      <h2>\n        <a href=\"#implementation\">Example implementation</a>\n      </h2>\n      <p>\n        An example parser implementation is provided in the{\" \"}\n        <a href=\"https://www.npmjs.com/package/@literal-jsx/parser\">\n          <code>@literal-jsx/parser</code>\n        </a>{\" \"}\n        npm package. It can be used as follows:\n      </p>\n      <CodeMirror\n        value={`import { parseValue, parseAST } from \"literal-jsx\";\nconst data = parseValue('<Button primary text=\"Hi\" />');`}\n        options={{ ...CM_OPTS, readOnly: \"nocursor\" }}\n        onBeforeChange={() => {}}\n      />\n      <p>\n        You can play around with the parser below. It will parse the given\n        literal JSX source code starting with the <em className=\"nt\">Value</em>{\" \"}\n        non-terminal, as per the spec. No factory function is passed, and\n        therefore the content is just transformed to a default content structure\n        detailing the Literal JSX structure.\n      </p>\n      <CodeMirror\n        className=\"editable\"\n        value={code}\n        options={CM_OPTS}\n        onBeforeChange={(editor, data, value) => {\n          setCode(value);\n        }}\n      />\n      <div>\n        <Tabbed\n          tabs={[\n            {\n              title: \"Value\",\n              content:\n                \"value\" in parsed\n                  ? inspect(parsed.value)\n                  : errorMsg(parsed.error)\n            },\n            {\n              title: \"AST\",\n              content:\n                \"ast\" in parsed ? inspect(parsed.ast) : errorMsg(parsed.error)\n            }\n          ]}\n        />\n      </div>\n    </section>\n  );\n}\n\nfunction inspect(something: any) {\n  return (\n    <div\n      css={`\n        white-space: pre;\n        margin-top: 1.4rem;\n        max-width: 100%;\n        overflow-x: auto;\n        text-align: left;\n      `}\n    >\n      <ObjectInspector theme={INSPECT_THEME} data={something} expandLevel={5} />\n    </div>\n  );\n}\n\nfunction errorMsg(error: Error) {\n  return (\n    <div\n      css={`\n        color: #ca390c;\n        font-weight: bold;\n        text-align: left;\n      `}\n    >\n      <p css=\"font-style: italic;\">That couldn't be parsed :(</p>\n      <pre css=\"font-size: 80%;\">{error.toString()}</pre>\n    </div>\n  );\n}\n","import \"styled-components/macro\";\nimport React from \"react\";\nimport { hot } from \"react-hot-loader\";\nimport \"~/assets/railroads.scss\";\nimport Motivation from \"./sections/Motivation\";\nimport Specification from \"./sections/Specification\";\n// import Examples from \"./sections/Examples\";\nimport Implementation from \"./sections/Implementation\";\n// import styles from \"./App.module.scss\";\nimport logo from \"~/assets/logo.svg\";\n\nfunction App() {\n  return (\n    <>\n      <main id=\"top\">\n        <div className=\"wrap\">\n          <div className=\"titlecontainer\">\n            <a href=\"#top\">\n              <img\n                alt=\"\"\n                src={logo}\n                css={`\n                  height: 6rem;\n                  width: auto;\n                  display: block;\n                `}\n              />\n            </a>\n            <div className=\"titleblock\">\n              <h1\n                css={`\n                  margin: 0;\n                `}\n              >\n                Introducing Literal JSX\n              </h1>\n              <p\n                className=\"lead\"\n                css={`\n                  margin: 1rem 0 0;\n                `}\n              >\n                <em>\n                  Let JSX embrace its potential as a content authoring markup\n                  format for the component-based era!\n                </em>\n              </p>\n            </div>\n          </div>\n          <p className=\"lead\">\n            <strong>Literal JSX</strong> is a lightweight format for content\n            potentially rich in data and nominal structure. It extends{\" \"}\n            <a href=\"https://json.org\">\n              <strong>JSON</strong>\n            </a>{\" \"}\n            by adding the JSX-like <em className=\"nt\">Element</em> type as a\n            possible value type aside objects, arrays, numbers, strings,\n            booleans, and <code>null</code>. However, instead of the full\n            JavaScript expression syntax, only JSON data (possibly including\n            more <em className=\"nt\">Element</em> nodes) is allowed inside of its\n            attributes (\"props\") and children.\n          </p>\n          <Motivation />\n          <Specification />\n          {/* <Examples /> */}\n          <Implementation />\n        </div>\n      </main>\n      <footer>\n        <div className=\"wrap\">\n          An idea proposed by <a href=\"https://klve.nl/\">Kelley van Evert</a>,\n          but really, low-hanging fruit. Inspired by{\" \"}\n          <a href=\"https://json.org/\">JSON</a>. Also, this site and the example\n          implementation could not have been made without these lovely\n          libraries: tabatkins'{\" \"}\n          <a href=\"https://github.com/tabatkins/railroad-diagrams\">\n            <code>railroad-diagrams</code>\n          </a>\n          , Hardmath123's{\" \"}\n          <a href=\"https://nearley.js.org/\">\n            <code>nearley.js</code>\n          </a>\n          .\n        </div>\n      </footer>\n    </>\n  );\n}\n\nconst wrap =\n  process.env.NODE_ENV === \"development\" ? hot(module) : (x: any) => x;\n\nexport default wrap(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"~/assets/global.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Tabbed_container__20F7-\",\"nav\":\"Tabbed_nav__1yge6\",\"selected\":\"Tabbed_selected__1ofSX\",\"content\":\"Tabbed_content__3KoXz\"};"],"sourceRoot":""}