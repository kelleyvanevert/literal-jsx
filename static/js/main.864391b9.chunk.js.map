{"version":3,"sources":["assets/logo.svg","components/Tabbed.module.scss","components/Tabbed.tsx","sections/GrammarRailroads.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","container","nav","selected","content","Tabbed","_ref","tabs","_useState","useState","_useState2","Object","slicedToArray","i","set_i","react_default","a","createElement","className","styles","map","tab","j","key","onClick","title","rr","Diagram","INTERNAL_ALIGNMENT","JSXL_DIAGRAM_TABS","diagram","ComplexDiagram","Sequence","NonTerminal","ZeroOrMore","Choice","Optional","objectSpread","dangerouslySetInnerHTML","__html","JSON_DIAGRAM_TABS","OneOrMore","Comment","Skip","GrammarRailroads","wrap","x","showMenu","setShowMenu","_StyledDiv","_StyledHeader","_StyledSpan","_StyledButton","_css","_StyledSvg","xmlns","viewBox","width","height","fill","stroke","strokeWidth","d","_StyledMain","_StyledDiv2","cx","_StyledUl","_StyledDiv3","_StyledDiv4","_StyledDiv5","_StyledImg","alt","src","logo","_StyledH","_StyledP","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.864391b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e0c3fb5f.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Tabbed_container__20F7-\",\"nav\":\"Tabbed_nav__1yge6\",\"selected\":\"Tabbed_selected__1ofSX\",\"content\":\"Tabbed_content__3KoXz\"};","import \"styled-components/macro\";\nimport React, { useState } from \"react\";\nimport styles from \"./Tabbed.module.scss\";\n\nexport interface ITab {\n  title: string;\n  content: React.ReactNode;\n}\n\ninterface Props {\n  tabs: ITab[];\n}\n\nexport default function Tabbed({ tabs }: Props) {\n  const [i, set_i] = useState<number>(0);\n\n  return (\n    <div className={styles.container}>\n      <ul className={styles.nav}>\n        {tabs.map((tab, j) => (\n          <li key={j}>\n            <button\n              onClick={() => set_i(j)}\n              className={i === j ? styles.selected : \"\"}\n            >\n              {tab.title}\n            </button>\n          </li>\n        ))}\n      </ul>\n      <div className={styles.content}>{tabs[i] ? tabs[i].content : null}</div>\n    </div>\n  );\n}\n","import \"styled-components/macro\";\nimport React from \"react\";\nimport rr from \"railroad-diagrams\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\nimport Tabbed, { ITab } from \"~/components/Tabbed\";\n\n// @ts-ignore\nrr.Diagram.INTERNAL_ALIGNMENT = \"left\";\n\nconst JSXL_DIAGRAM_TABS: Array<ITab & { diagram: any }> = [\n  {\n    title: \"Element\",\n    diagram: rr.ComplexDiagram(\n      rr.Sequence(\n        \"<\",\n        rr.NonTerminal(\"Name\"),\n        rr.ZeroOrMore(rr.NonTerminal(\"Attribute\")),\n        rr.Choice(\n          1,\n          \"/>\",\n          rr.Sequence(\n            \">\",\n            rr.ZeroOrMore(rr.NonTerminal(\"Child\")),\n            \"</\",\n            rr.NonTerminal(\"Name*\"),\n            \">\"\n          )\n        )\n      )\n    )\n  },\n  {\n    title: \"Name\",\n    diagram: rr.ComplexDiagram(\n      rr.NonTerminal(\"Identifier\"),\n      rr.Choice(\n        0,\n        rr.ZeroOrMore(rr.Sequence(\".\", rr.NonTerminal(\"Identifier\"))),\n        rr.Sequence(\":\", rr.NonTerminal(\"Identifier\"))\n      )\n    )\n  },\n  {\n    title: \"Attribute\",\n    diagram: rr.ComplexDiagram(\n      rr.NonTerminal(\"Name\"),\n      rr.Optional(\n        rr.Sequence(\n          \"=\",\n          rr.Choice(\n            0,\n            rr.NonTerminal(\"String\"),\n            rr.Sequence(\"{\", rr.NonTerminal(\"Value\"), \"}\")\n          )\n        )\n      )\n    )\n  },\n  {\n    title: \"Child\",\n    diagram: rr.ComplexDiagram(\n      rr.Choice(\n        0,\n        rr.NonTerminal(\"plain text\"),\n        rr.NonTerminal(\"Element\"),\n        rr.NonTerminal(\"Value\")\n      )\n    )\n  }\n].map(tab => ({\n  ...tab,\n  content: <div dangerouslySetInnerHTML={{ __html: tab.diagram }} />\n}));\n\nJSXL_DIAGRAM_TABS[0].content = (\n  <div>\n    <div>{JSXL_DIAGRAM_TABS[0].content}</div>\n    <p>*must match the one on in the opening tag</p>\n  </div>\n);\n\nJSXL_DIAGRAM_TABS[1].content = (\n  <div>\n    <div>{JSXL_DIAGRAM_TABS[1].content}</div>\n    <p>\n      <em>Identifier</em> is any valid variable name in JavaScript\n    </p>\n  </div>\n);\n\nconst JSON_DIAGRAM_TABS: ITab[] = [\n  {\n    title: \"Value\",\n    diagram: rr.ComplexDiagram(\n      rr.Choice(\n        0,\n        rr.NonTerminal(\"Element\"),\n        rr.NonTerminal(\"String\"),\n        rr.NonTerminal(\"Number\"),\n        rr.NonTerminal(\"Object\"),\n        rr.NonTerminal(\"Array\"),\n        \"true\",\n        \"false\",\n        \"null\"\n      )\n    )\n  },\n  {\n    title: \"Object\",\n    diagram: rr.ComplexDiagram(\n      \"{\",\n      rr.ZeroOrMore(\n        rr.Sequence(rr.NonTerminal(\"String\"), \":\", rr.NonTerminal(\"Value\")),\n        \",\"\n      ),\n      \"}\"\n    )\n  },\n  {\n    title: \"Array\",\n    diagram: rr.ComplexDiagram(\n      \"[\",\n      rr.ZeroOrMore(rr.NonTerminal(\"Value\"), \",\"),\n      \"]\"\n    )\n  },\n  {\n    title: \"String\",\n    diagram: rr.Diagram(\n      '\"',\n      rr.Optional(\n        rr.OneOrMore(\n          rr.Choice(\n            0,\n            rr.NonTerminal(\"almost any UNICODE character\"),\n            rr.Sequence(\n              \"\\\\\",\n              rr.Choice(\n                0,\n                rr.Sequence('\"', rr.Comment(\"quotation mark\")),\n                rr.Sequence(\"\\\\\", rr.Comment(\"reverse solidus\")),\n                rr.Sequence(\"/\", rr.Comment(\"solidus\")),\n                rr.Sequence(\"b\", rr.Comment(\"backspace\")),\n                rr.Sequence(\"f\", rr.Comment(\"formfeed\")),\n                rr.Sequence(\"n\", rr.Comment(\"newline\")),\n                rr.Sequence(\"r\", rr.Comment(\"carriage return\")),\n                rr.Sequence(\"t\", rr.Comment(\"horizontal tab\")),\n                rr.Sequence(\"u\", rr.NonTerminal(\"4 hexademical digits\"))\n              )\n            )\n          )\n        )\n      ),\n      '\"'\n    )\n  },\n  {\n    title: \"Number\",\n    diagram: rr.Diagram(\n      rr.Sequence(\n        rr.Choice(0, rr.Skip(), \"-\"),\n        rr.Choice(\n          0,\n          \"0\",\n          rr.Sequence(\n            rr.NonTerminal(\"digit 1-9\"),\n            rr.OneOrMore(rr.Skip(), rr.NonTerminal(\"digit\"))\n          )\n        ),\n        rr.Optional(rr.Sequence(\".\", rr.OneOrMore(rr.NonTerminal(\"digit\")))),\n        rr.Choice(\n          0,\n          rr.Skip(),\n          rr.Sequence(\n            rr.Choice(0, \"e\", \"E\"),\n            rr.Choice(1, \"-\", rr.Skip(), \"+\"),\n            rr.OneOrMore(rr.NonTerminal(\"digit\"))\n          )\n        )\n      )\n    )\n  }\n].map(tab => ({\n  ...tab,\n  content: <div dangerouslySetInnerHTML={{ __html: tab.diagram }} />\n}));\n\nexport default function GrammarRailroads() {\n  return (\n    <div>\n      <h2>Specification</h2>\n      <p>\n        Literal JSX subsets JSX in the same spirit as JSON subsets JavaScript.\n        This means some \"additional\" JSX syntax has been omitted intentionally.\n        For example, JSX elements cannot be assigned unquoted to attributes of\n        other elements, and strings are always double-quoted, just like in JSON.\n      </p>\n      <Tabbed tabs={JSXL_DIAGRAM_TABS} />\n      <Tabbed tabs={JSON_DIAGRAM_TABS} />\n    </div>\n  );\n}\n","import \"styled-components/macro\";\nimport React, { useState } from \"react\";\nimport cx from \"classnames\";\nimport { hot } from \"react-hot-loader\";\nimport \"~/assets/railroads.scss\";\nimport GrammarRailroads from \"./sections/GrammarRailroads\";\n// import styles from \"./App.module.scss\";\nimport logo from \"~/assets/logo.svg\";\n\nfunction App() {\n  const [showMenu, setShowMenu] = useState<boolean>(false);\n\n  return (\n    <div\n      css={`\n        @media (max-width: 800px) {\n          main {\n            flex-direction: column;\n            .sidebar {\n              display: none;\n\n              &.show {\n                display: block;\n              }\n            }\n            aside {\n              margin: 0 1.4rem;\n            }\n          }\n\n          .hamburger {\n            display: block;\n          }\n\n          .titlecontainer {\n            flex-direction: column;\n            .titleblock {\n              margin: 1rem 0 0;\n            }\n          }\n        }\n      `}\n    >\n      <header\n        css={`\n          padding: 0.4rem;\n          background: white;\n          display: flex;\n        `}\n      >\n        <span css=\"flex-grow: 1\" />\n        <button\n          className=\"hamburger\"\n          css={`\n            display: none;\n            border: none;\n            background: ${showMenu ? \"#ddd\" : \"none\"};\n            outline: none;\n            padding: 0.3rem;\n            cursor: pointer;\n          `}\n          title=\"Toggle menu\"\n          onClick={() => setShowMenu(!showMenu)}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 16 16\"\n            width=\"24\"\n            height=\"24\"\n            fill=\"none\"\n            stroke=\"currentcolor\"\n            strokeWidth=\"2\"\n            css=\"display:block;vertical-align:middle;overflow:visible\"\n          >\n            <path\n              d=\"\n                M0 2.5 L16 2.5\n                M0 8 L16 8\n                M0 13.5 L16 13.5\n              \"\n            />\n          </svg>\n        </button>\n      </header>\n      <main\n        css={`\n          display: flex;\n          flex-direction: row;\n\n          aside {\n            position: sticky;\n            top: 0;\n            margin: 4rem 0 5rem 1.4rem;\n            max-height: 100vh;\n            overflow-y: auto;\n          }\n        `}\n      >\n        <div\n          className={cx(\"sidebar\", showMenu ? \"show\" : \"\")}\n          css={`\n            flex: none;\n            width: 16rem;\n          `}\n        >\n          <aside>\n            <ul\n              css={`\n                margin: 0;\n                padding: 2rem 0;\n              `}\n            >\n              <li>Motivation</li>\n              <li>Specification</li>\n              <li>Examples</li>\n              <li>Reference implementation</li>\n            </ul>\n          </aside>\n        </div>\n        <div\n          css={`\n            flex: 1;\n          `}\n        >\n          <div\n            css={`\n              max-width: 56rem;\n              margin: 0 auto;\n              padding: 1.4rem;\n            `}\n          >\n            <div\n              className=\"titlecontainer\"\n              css={`\n                display: flex;\n                align-items: center;\n                padding: 1rem 0;\n\n                .titleblock {\n                  margin: 0 0 0 1.4rem;\n                }\n              `}\n            >\n              <img\n                alt=\"\"\n                src={logo}\n                css={`\n                  height: 6rem;\n                  width: auto;\n                  display: block;\n                `}\n              />\n              <div className=\"titleblock\">\n                <h1\n                  css={`\n                    margin: 0;\n                  `}\n                >\n                  Introducing Literal JSX\n                </h1>\n                <p\n                  className=\"lead\"\n                  css={`\n                    margin: 1rem 0 0;\n                  `}\n                >\n                  Let JSX embrace its potential as a markup format for\n                  transferring data- and component-rich content structures!\n                </p>\n              </div>\n            </div>\n            <p>\n              <strong>Literal JSX</strong> is a lightweight format for\n              interchanging content structures potentially rich in shape and\n              data. It aims to serve a similar purpose as JSON did. Where JSON\n              subsetted the JavaScript expression, and provided a community\n              standard for data exchange,\n            </p>\n            <p>\n              Wonderful libraries such as MDX try to combine the best of JSX, as\n              a standard for authoring component-rich content structures, with\n              Markdown, as a standard for easily authoring content. It runs into\n              technical difficulties though, due to the fact that parsing full\n              MDX requires an entire JavaScript parser. This goes against the\n              grain of Markdown philosophy, being a format that is easily and\n              often parsed and rendered lazily at view-time.\n            </p>\n            <p>\n              JSX aims to fill that gap, prividing a{\" \"}\n              <em>straightforward and intuitive standard</em> instead of an\n              implementation.\n            </p>\n            <GrammarRailroads />\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nconst wrap =\n  process.env.NODE_ENV === \"development\" ? hot(module) : (x: any) => x;\n\nexport default wrap(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"~/assets/global.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}